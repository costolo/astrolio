---
interface Props {
  color?: string | undefined
  gridRow?: string | undefined
  gridColumn?: string | undefined
  fullScreen?: boolean | undefined
  noPadding?: boolean | undefined
  fixedWidth?: string | undefined
  scroll?: boolean | undefined
  center?: boolean | undefined
  widthString?: string | undefined
}
import colors from '../../styles/theme.json'

if (!Boolean(Astro.props.noPadding)) {
  if (Astro.props.color === undefined) {
    const {
      cards: { og }
    } = colors
    Astro.props.color = og[Math.floor(Math.random() * og.length)]
  }
}

const {
  color,
  gridRow = 'auto',
  gridColumn = 'auto',
  fullScreen,
  noPadding,
  scroll,
  center
} = Astro.props
---

<style
  lang="scss"
  define:vars={{
    color: color,
    gridRow: gridRow,
    gridColumn: gridColumn,
    noPadding: noPadding
  }}
>
  div.brutal-card {
    grid-row: var(--gridRow);
    grid-column: var(--gridColumn);
    position: relative;
    background-color: var(--color);
    border-radius: 0.5rem;
    border: 3px solid black;
    filter: drop-shadow(7px 7px 0 rgb(0 0 0 / 1));
    transition: all;
    padding: 1rem;
    transition-duration: 0.5s;
    animation: ease-in-out;
    overflow: hidden;
    width: fit-content;
    &.fullscreen {
      height: 100%;
      width: 100%;
    }

    &.noPadding {
      padding: unset;
    }

    &.scroll {
      height: 80vh;
      overflow: scroll;
    }

    &.center {
      margin: 0 auto;
    }
  }

  div.brutal-card:hover {
    filter: drop-shadow(5px 5px 0 rgb(0 0 0 / 1));
  }
</style>

<div
  class:list={[
    'brutal-card',
    { fullScreen },
    { noPadding },
    { scroll },
    { center }
  ]}
>
  <slot />
</div>
